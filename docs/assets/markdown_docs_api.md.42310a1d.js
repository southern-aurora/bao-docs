import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.b8c8dad6.js";const u=JSON.parse('{"title":"Api","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/docs/api.md","filePath":"markdown/docs/api.md"}'),l={name:"markdown/docs/api.md"},o=p(`<h1 id="api" tabindex="-1">Api <a class="header-anchor" href="#api" aria-label="Permalink to &quot;Api&quot;">​</a></h1><p>Api 是运行你实际业务逻辑的入口。</p><p>尽管，Api 通常运行在 HTTP 环境当中，但 Api 被设计为了尽可能通用的方式。它也可以由其他方式运行，例如，通过命令行执行、抑或是其他微服务调用、甚至由其他 JavaScript 脚本调用等。</p><h2 id="编写" tabindex="-1">编写 <a class="header-anchor" href="#编写" aria-label="Permalink to &quot;编写&quot;">​</a></h2><p><code>/src/app</code> 是一个&quot;魔法&quot;目录，它下面的所有名为 <code>api.ts</code> 的文件，都会被自动加载。你可以在其中创建任意的目录结构，来组织你的 Api。</p><p>除了名为 <code>api.ts</code> 以外的文件都是私有的，它们不会被自动加载。你可以在 <code>api.ts</code> 中，通过 <code>import</code> 其他文件的方式来拆分组织你的代码。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineApi, defineFail } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;southern-aurora-bao&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">foo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineApi</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  meta: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">action</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">params</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">by</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">context</span></span>
<span class="line"><span style="color:#E1E4E8;">  ) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello world, by: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> params.by;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      say: message,</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineApi, defineFail } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;southern-aurora-bao&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">foo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineApi</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  meta: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">action</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">params</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#E36209;">by</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">context</span></span>
<span class="line"><span style="color:#24292E;">  ) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">message</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello world, by: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> params.by;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      say: message,</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h2 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;meta&quot;">​</a></h2><p><code>meta</code> 是 Api 的元数据。详情请参阅 <a href="/bao-docs/markdown/docs/meta.html">元数据</a> 章节。</p><h2 id="action" tabindex="-1">action <a class="header-anchor" href="#action" aria-label="Permalink to &quot;action&quot;">​</a></h2><p><code>action</code> 是 Api 所执行的具体逻辑。它是一个函数，并接受 <code>data</code> 和 <code>context</code> 两个参数。</p><h3 id="params-参数" tabindex="-1">params 参数 <a class="header-anchor" href="#params-参数" aria-label="Permalink to &quot;params 参数&quot;">​</a></h3><p><code>params</code> 参数是此 Api 可接受的参数。当一个请求访问此 Api 时，Bao 会自动对请求的数据格式进行校验。如果校验失败，Bao 会返回 <code>general-type-safe-error</code> 的失败错误码。</p><p>你还可以利用 <a href="https://typia.io/docs/validators/tags/" target="_blank" rel="noreferrer">Typia</a> 实现更复杂的校验。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineApi, defineFail } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;southern-aurora-bao&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">foo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">defineApi</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  meta: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">action</span><span style="color:#E1E4E8;">(</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// check your params </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">params</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">id</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">typia</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tags</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Format</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#9ECBFF;">&quot;uuid&quot;</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">email</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">typia</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tags</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Format</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#9ECBFF;">&quot;email&quot;</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      </span><span style="color:#FFAB70;">age</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">typia</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tags</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Type</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#9ECBFF;">&quot;uint32&quot;</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">typia</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tags</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">ExclusiveMinimum</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">19</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">typia</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">tags</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Maximum</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">context</span></span>
<span class="line"><span style="color:#E1E4E8;">  ) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello world, your email: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> params.email;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      say: message,</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { defineApi, defineFail } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;southern-aurora-bao&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">foo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">defineApi</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  meta: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">action</span><span style="color:#24292E;">(</span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// check your params </span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#E36209;">params</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> {</span></span>
<span class="line has-focus"><span style="color:#24292E;">      </span><span style="color:#E36209;">id</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">typia</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tags</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Format</span><span style="color:#24292E;">&lt;</span><span style="color:#032F62;">&quot;uuid&quot;</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line has-focus"><span style="color:#24292E;">      </span><span style="color:#E36209;">email</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">typia</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tags</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Format</span><span style="color:#24292E;">&lt;</span><span style="color:#032F62;">&quot;email&quot;</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line has-focus"><span style="color:#24292E;">      </span><span style="color:#E36209;">age</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">typia</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tags</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Type</span><span style="color:#24292E;">&lt;</span><span style="color:#032F62;">&quot;uint32&quot;</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">typia</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tags</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">ExclusiveMinimum</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">19</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">typia</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">tags</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Maximum</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line has-focus"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">context</span></span>
<span class="line"><span style="color:#24292E;">  ) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">message</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello world, your email: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> params.email;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      say: message,</span></span>
<span class="line"><span style="color:#24292E;">    };</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><h3 id="context-参数" tabindex="-1">context 参数 <a class="header-anchor" href="#context-参数" aria-label="Permalink to &quot;context 参数&quot;">​</a></h3><p><code>context</code> 参数是一个对象，它包含了当前请求的上下文信息。</p><p>有关 <code>context</code> 的更多信息，请参阅 <a href="/bao-docs/markdown/docs/context.html">Context</a> 章节。</p>`,18),e=[o];function t(c,r,E,y,i,F){return a(),n("div",null,e)}const m=s(l,[["render",t]]);export{u as __pageData,m as default};
